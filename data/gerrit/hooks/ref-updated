#!/bin/bash
# This wrapper takes Gerrit hook calls from the Gerrit
# plugin and makes them act like standard git hooks.

#
# Magic. Gerrit likes to break stuff... this will log everything we do
# Close stdout, close stderr, redirect stdout to log, redirect stderr to log
#
LOG="/tmp/notify"
exec 1<&-
exec 2<&-
exec 1<>$LOG
exec 2>&1

PROJECT=""
REFNAME=""
SUBMITTER=""
USERNAME=""
OLDREV=""
NEWREV=""

O=`getopt -l project: -l refname: -l submitter: -l submitter-username: -l oldrev: -l newrev: -- p:r:s:u:o:n: "$@"` || exit 1
eval set -- "$O"
while true; do
	case "$1" in
		--project)      PROJECT="$2"; shift 2;;
		--refname)      REFNAME="$2"; shift 2;;
		--submitter)    SUBMITTER="$2"; shift 2;;
		--submitter-username) USERNAME="$2"; shift 2;;
		--oldrev)       OLDREV="$2"; shift 2;;
		--newrev)       NEWREV="$2"; shift 2;;
		--)     shift; break;;
		*)      echo Error: $1; exit 1;;
	esac
done

# https://bugs.chromium.org/p/gerrit/issues/detail?id=10057
SUBMITTER=$(echo $SUBMITTER | tr -d \")

echo "-------------------------------"
echo "DEBUG: THE REFNAME is: $REFNAME"
echo "DEBUG: THE PROJECT is: $PROJECT"
echo "DEBUG: THE SUBMITTER is: $SUBMITTER"
echo "DEBUG: THE USERNAME is: $USERNAME"
echo "DEBUG: THE OLDREV is: $OLDREV"
echo "DEBUG: THE NEWREV is: $NEWREV"

UPLOADER_EMAIL=$SUBMITTER
if [ -z "${UPLOADER_USERNAME// }" ]; then
	# no username? default to first part of email
	UPLOADER_USERNAME="${USERNAME}"
fi
if [ -z "${UPLOADER_USERNAME// }" ]; then
	# STILL no username? default to "nobody"
	UPLOADER_USERNAME=nobody
fi

echo "DEBUG: THE UPLOADER_EMAIL is: $UPLOADER_EMAIL"
echo "DEBUG: THE UPLOADER_USERNAME is: $UPLOADER_USERNAME"

echo "Obtaining lock..."

lockfile=$GIT_DIR/receive.lock

with_lock_unlock_if_held() {
	if [[ "$with_lock_has_lock" -eq 1 ]] ; then
		rm -f "$lockfile"
	fi
}

# grab lockfile to protect against concurrent post-receive
# hooks getting confused with the order of hrevs
with_lock_has_lock=0
trap with_lock_unlock_if_held INT TERM EXIT
lockfile -1 -r 30 "$lockfile"
if [ $? -ne 0 ] ; then
	exit $?
fi
with_lock_has_lock=1

export GIT_DIR
cd "$GIT_DIR"

echo "-------------receive-notify--------------"
# create hrev-tags and send e-mail & cia notifications
echo "$OLDREV $NEWREV $REFNAME" | USER="$UPLOADER_USERNAME" USER_EMAIL="$UPLOADER_EMAIL" $GERRIT_SITE/hooks/receive-notify.pl

# tell buildbot about new changes
if [ -f "$GIT_DIR/hooks/git_buildbot.py" ] ; then
	echo "Notifying buildbot of $NEWREV @ $REFNAME"
	echo -n "$OLDREV $NEWREV $REFNAME" | $GIT_DIR/hooks/git_buildbot.py -v
fi

# tell (new) buildbot about new changes
if [ -f "$GIT_DIR/hooks/git_buildbot_neu.py" ] ; then
	echo "Notifying buildbot of $NEWREV @ $REFNAME"
	echo -n "$OLDREV $NEWREV $REFNAME" | $GIT_DIR/hooks/git_buildbot_neu.py -v
fi

echo "Release lock..."

# cleanup lockfile
rm -f "$lockfile"
with_lock_has_lock=0
