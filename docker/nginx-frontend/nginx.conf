user nginx;
worker_processes auto;

error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

events {
	worker_connections 2048;
	use epoll;
	multi_accept on;
}

http {
	include /etc/nginx/mime.types;
	default_type application/octet-stream;

	log_format main	'$remote_addr - $remote_user [$time_local] "$request" '
			'$status $body_bytes_sent "$http_referer" '
			'"$http_user_agent" "$http_x_forwarded_for"';

	access_log /var/log/nginx/access.log main;

	sendfile on;

	keepalive_timeout 65;

	tcp_nopush on;
	tcp_nodelay on;

	gzip on;

#	server {
#		listen 8080;
#		server_name
#			server-stats.haiku-os.org
#			;
#
#		location / {
#			root /usr/share/nginx/html;
#			index index.html index.htm;
#		}
#
#		error_page 500 502 503 504 /50x.html;
#		location = /50x.html {
#			root /usr/share/nginx/html;
#		}
#
#		location /collected_stats {
#			stub_status;
#		}
#
#		location /.well-known/acme-challenge {
#			root /letsencrypt;
#		}
#	}

	# redirect all http requests to https
	server {
		listen 8080;

		return 301 https://$host:8443$request_uri;
	}

	server {
		listen 8443 ssl http2;
		server_name haiku-os.org;

		ssl_certificate /letsencrypt/live/haiku-os.org/fullchain.pem;
		ssl_certificate_key /letsencrypt/live/haiku-os.org/privkey.pem;

		rewrite ^/(.*)$ https://www.haiku-os.org/$1 permanent;

		location /.well-known/acme-challenge {
			root /letsencrypt;
		}
	}

	server {
		listen 8443 ssl http2;
		server_name api.haiku-os.org;

		ssl_certificate /letsencrypt/live/api.haiku-os.org/fullchain.pem;
		ssl_certificate_key /letsencrypt/live/api.haiku-os.org/privkey.pem;

		rewrite ^/HIG/(.*)$ https://www.haiku-os.org/docs/HIG/$1 permanent;
		rewrite ^/(.*)$ https://www.haiku-os.org/docs/api/$1 permanent;

		location /.well-known/acme-challenge {
			root /letsencrypt;
		}
	}

	server {
		listen 8443 ssl http2;
		server_name userguide.haiku-os.org;

		ssl_certificate /letsencrypt/live/userguide.haiku-os.org/fullchain.pem;
		ssl_certificate_key /letsencrypt/live/userguide.haiku-os.org/privkey.pem;

		rewrite ^/(.*)$ https://www.haiku-os.org/docs/userguide/$1 permanent;

		location /.well-known/acme-challenge {
			root /letsencrypt;
		}
	}

	server {
		listen 8443 ssl http2;
		server_name buildbot.haiku-os.org;

		ssl_certificate /letsencrypt/live/buildbot.haiku-os.org/fullchain.pem;
		ssl_certificate_key /letsencrypt/live/buildbot.haiku-os.org/privkey.pem;

		location / {
			proxy_pass http://127.0.0.1:8010;
			proxy_set_header Host $host;
			proxy_set_header X-Real-IP $remote_addr;
		}

		location /.well-known/acme-challenge {
			root /letsencrypt;
		}
	}

#	server {
#		server_name buildbot-test.haiku-os.org;
#
#		location / {
#			proxy_pass http://127.0.0.1:18010;
#			proxy_set_header Host $host;
#			proxy_set_header X-Real-IP $remote_addr;
#		}
#
#		location /.well-known/acme-challenge {
#			root /letsencrypt;
#		}
#	}

	server {
		listen 8443 ssl http2;
		server_name ports-mirror.haiku-os.org;

		ssl_certificate /letsencrypt/live/ports-mirror.haiku-os.org/fullchain.pem;
		ssl_certificate_key /letsencrypt/live/ports-mirror.haiku-os.org/privkey.pem;

		location / {
			root /ports-mirror;
			autoindex on;
			autoindex_exact_size off;
		}

		location /.well-known/acme-challenge {
			root /letsencrypt;
		}
	}

	map_hash_bucket_size 128;

	map $uri $ports_new {
		include /haiku-files/nightly-images/currentImages.map.nginx;
	}

	server {
		listen 8443 ssl http2;
		server_name download.haiku-os.org;

		ssl_certificate /letsencrypt/live/download.haiku-os.org/fullchain.pem;
		ssl_certificate_key /letsencrypt/live/download.haiku-os.org/privkey.pem;

		root /haiku-files;

		gzip off;

		location / {
			autoindex on;
			autoindex_exact_size off;
		}

		location /.well-known/acme-challenge {
			root /letsencrypt;
		}

		if ($ports_new) {
			return 302 $ports_new;
		}
	}
}

